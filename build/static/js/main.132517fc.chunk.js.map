{"version":3,"sources":["img/logo.png","components/Navbar.jsx","components/Footer.jsx","components/about/About.jsx","components/products/Search.jsx","components/products/Products.jsx","redux/actions/productsAction.js","App.jsx","serviceWorker.js","redux/reducers/productsReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["module","exports","Navbar","to","src","logo","alt","exact","Footer","About","className","Search","props","handleSubmit","e","handleSearch","search","state","preventDefault","target","firstElementChild","value","setState","handleChange","changeCategory","this","autoComplete","onSubmit","htmlFor","id","onChange","onClick","Component","Products","getData","productsFiltered","products","filter","product","name","toLowerCase","includes","productsList","length","map","key","img","price","size","connect","dispatch","type","payload","breads","cakes","muffins","category","pAchangeCategory","App","path","component","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.132517fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.031454e3.png\";","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../img/logo.png';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <Link to=\"/products/all\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </Link>\r\n\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\">\r\n            About\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/products\">Products</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <h3>Coppyright by @Niria</h3>\r\n      <ul>\r\n        <li>FB</li>\r\n        <li>Twitter</li>\r\n        <li>IG</li>\r\n        <li>Phone</li>\r\n      </ul>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"about\">\r\n      <h1>BreadWorld Bakery Welcome!</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam cursus\r\n        ligula id quam tincidunt ornare. Pellentesque pulvinar sem commodo\r\n        aliquet malesuada. Vestibulum euismod justo et risus ornare aliquam.\r\n        Duis accumsan ante eget dui consectetur, ut elementum urna dignissim.\r\n        Sed nulla felis, gravida ac purus in, finibus maximus lectus. Cras\r\n        rhoncus metus ut enim tristique, ut accumsan mauris mattis. Maecenas vel\r\n        leo erat. Ut mattis diam id elit laoreet sodales. Vivamus ultrices,\r\n        tellus a pellentesque rhoncus, mauris lectus vestibulum quam, id\r\n        vulputate ante ex id ante. Cras ultricies eget dui a efficitur. Sed\r\n        lacus purus, tristique sed risus sit amet, varius bibendum sapien.\r\n      </p>\r\n      <h2>Short description! </h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam cursus\r\n        ligula id quam tincidunt ornare. Pellentesque pulvinar sem commodo\r\n        aliquet malesuada. Vestibulum euismod justo et risus ornare aliquam.\r\n        Duis accumsan ante eget dui consectetur, ut elementum urna dignissim.\r\n        Sed nulla felis, gravida ac purus in, finibus maximus lectus. Cras\r\n        rhoncus metus ut enim tristique, ut accumsan mauris mattis. Maecenas vel\r\n        leo erat. Ut mattis diam id elit laoreet sodales. Vivamus ultrices,\r\n        tellus a pellentesque rhoncus, mauris lectus vestibulum quam, id\r\n        vulputate ante ex id ante. Cras ultricies eget dui a efficitur. Sed\r\n        lacus purus, tristique sed risus sit amet, varius bibendum sapien.\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const { handleSearch } = this.props;\r\n    const { search } = this.state;\r\n\r\n    e.preventDefault();\r\n    handleSearch(search);\r\n    e.target.firstElementChild.firstElementChild.value = '';\r\n\r\n    this.setState({\r\n      search: null,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      search: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { changeCategory } = this.props;\r\n    const { handleSearch } = this.props;\r\n\r\n    return (\r\n      <div className=\"products_header\">\r\n        <form\r\n          autoComplete=\"off\"\r\n          className=\"products_form\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label htmlFor=\"products_form-input\">\r\n            Search:\r\n            <input\r\n              id=\"products_form-input\"\r\n              onChange={this.handleChange}\r\n              onClick={(e) => {\r\n                e.target.value = '';\r\n              }}\r\n            />\r\n          </label>\r\n\r\n        </form>\r\n\r\n        <ul className=\"products_form-nav\">\r\n          <li>\r\n            <NavLink\r\n              id=\"All\"\r\n              to=\"/products/all\"\r\n              onClick={(e) => {\r\n                handleSearch(null);\r\n                changeCategory(e.target.id);\r\n              }}\r\n            >\r\n              All\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              id=\"Breads\"\r\n              to=\"/products/bread\"\r\n              onClick={(e) => {\r\n                handleSearch(null);\r\n                changeCategory(e.target.id);\r\n              }}\r\n            >\r\n              Bread\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              id=\"Cakes\"\r\n              to=\"/products/cakes\"\r\n              onClick={(e) => {\r\n                handleSearch(null);\r\n                changeCategory(e.target.id);\r\n              }}\r\n            >\r\n              Cakes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              id=\"Muffins\"\r\n              to=\"/products/muffins\"\r\n              onClick={(e) => {\r\n                handleSearch(null);\r\n                changeCategory(e.target.id);\r\n              }}\r\n            >\r\n              Muffins\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  pAchangeCategory,\r\n  pAfetchBreadsData,\r\n  pAfetchCakesData,\r\n  pAfetchMuffinsData,\r\n} from '../../redux/actions/productsAction';\r\n\r\nimport Search from './Search';\r\n\r\nclass Products extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getData } = this.props;\r\n    getData();\r\n    const { changeCategory } = this.props;\r\n    changeCategory('All');\r\n  }\r\n\r\n  handleSearch =(value) => {\r\n    this.setState({\r\n      search: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const productsFiltered = products.filter((product) => {\r\n      const { search } = this.state;\r\n      return (\r\n        search === null\r\n        || product.name.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    });\r\n    const productsList = productsFiltered.length ? (\r\n      productsFiltered.map((product) => (\r\n        <li key={product.id}>\r\n          <img src={product.img} alt=\"product\" />\r\n          <h1>{product.name}</h1>\r\n          <p>\r\n            {product.price}\r\n            $ size:\r\n            {product.size}\r\n          </p>\r\n        </li>\r\n      ))\r\n    ) : (\r\n      <div className=\"products_error\">No products</div>\r\n    );\r\n\r\n    const { changeCategory } = this.props;\r\n    return (\r\n      <section className=\"products\">\r\n        <Search\r\n          changeCategory={changeCategory}\r\n          handleSearch={this.handleSearch}\r\n        />\r\n        <ul className=\"products_view\">{productsList}</ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getData: () => {\r\n    dispatch(pAfetchBreadsData());\r\n    dispatch(pAfetchCakesData());\r\n    dispatch(pAfetchMuffinsData());\r\n  },\r\n  changeCategory: (category) => {\r\n    dispatch(pAchangeCategory(category));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.products,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import breads from '../../database/breads.json';\r\nimport cakes from '../../database/cakes.json';\r\nimport muffins from '../../database/muffins.json';\r\n\r\nexport const pAchangeCategory = (category) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'CHANGE_CATEGORY',\r\n      payload: category,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pAfetchBreadsData = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'GET_BREADS_DATA',\r\n      payload: breads,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pAfetchCakesData = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'GET_CAKES_DATA',\r\n      payload: cakes,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pAfetchMuffinsData = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'GET_MUFFINS_DATA',\r\n      payload: muffins,\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {  Switch, Route, HashRouter } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport About from './components/about/About';\r\nimport Products from './components/products/Products';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={About} />\r\n        <Route path=\"/products\" component={Products} />\r\n      </Switch>\r\n      <Footer />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n  breads: [],\r\n  muffins: [],\r\n  cakes: [],\r\n  products: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'GET_BREADS_DATA':\r\n      return { ...state, breads: payload };\r\n    case 'GET_CAKES_DATA':\r\n      return { ...state, cakes: payload };\r\n    case 'GET_MUFFINS_DATA':\r\n      return { ...state, muffins: payload };\r\n    case 'CHANGE_CATEGORY':\r\n      switch (payload) {\r\n        case 'Breads':\r\n          return {\r\n            ...state,\r\n            products: [...state.breads],\r\n          };\r\n        case 'Cakes':\r\n          return {\r\n            ...state,\r\n            products: [...state.cakes],\r\n          };\r\n        case 'Muffins':\r\n          return {\r\n            ...state,\r\n            products: [...state.muffins],\r\n          };\r\n        default:\r\n          return {\r\n            ...state,\r\n            products: [...state.breads, ...state.cakes, ...state.muffins],\r\n          };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport productsReducer from './productsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}